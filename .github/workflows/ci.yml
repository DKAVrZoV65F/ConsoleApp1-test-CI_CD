name: CI/CD Server ðŸ§ªðŸš€

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "master" ]
  
env:
  DOTNET_VERSION: '8.0.x'                 # Version .NET
  DOTNET_INSTALL_DIR: '.\.dotnet'

  
concurrency:
  group: CI/CD-Server-ðŸ§ªðŸš€
  cancel-in-progress: true
jobs:
  CI-CD:
    continue-on-error: false
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
      fail-fast: false
      max-parallel: 1
    runs-on: ${{ matrix.os }}
    
    steps:
        - uses: actions/checkout@v4.1.1
        # - name: Cache .NET ðŸ“¦
        #   id: cache-dotnet
        #   uses: actions/cache@v4.0.1
        #   with:
        #     path: ${{ env.DOTNET_INSTALL_DIR }}
        #     key: Dotnet-8
        #     restore-keys: Dotnet-8
        
        # - name: Display Cache .NET ðŸ“¦
        #   run: echo '${{ toJSON(steps.cache-dotnet.outputs) }}'
        - name: Setup .NET ðŸ“¦
          # if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
          uses: actions/setup-dotnet@v4.0.0
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}

        # - name: Cache Dependencies ðŸ“‚
        #   id: cache-dependencies
        #   uses: actions/cache@v4.0.1
        #   with:
        #     path: ${{ env.DOTNET_DEPENDENCIES_DIR }}
        #     key: Dotnet-dependencies
        #     restore-keys: Dotnet-dependencies
            
        - name: Install Dependencies ðŸ“‚
          # if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
          run: dotnet restore ConsoleApp1
        
        - name: Build ðŸ§±
          run: dotnet build -c release --no-restore

        - name: Test ðŸ§ª
          # run: dotnet test xU_Server --logger "trx;LogFileName=test-results-server-{{ matrix.os }}.trx" || true
          run: dotnet test --logger "trx;LogFileName=test-results-server-{{ matrix.os }}.trx" || true

        # - name: Publish Test Result ðŸ§ª
        #   uses: dorny/test-reporter@v1
        #   if: always()
        #   with:
        #     name: Report Tests ðŸ’¾
        #     path: "**/test-results-server-{{ matrix.os }}.trx"
        #     reporter: dotnet-trx
        #     fail-on-error: true

        - name: Upload a Build Artifact ðŸš€
          uses: actions/upload-artifact@v4.3.0
          with:
              name: Artifact-${{ matrix.os }}
              path: ./ConsoleApp1/bin/Release/net8.0/*
