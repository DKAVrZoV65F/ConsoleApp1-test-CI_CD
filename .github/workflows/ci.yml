name: CI Server ðŸ§ª

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

  
env:
  # DOTNET_NOLOGO: true                     # Disable the .NET logo
  # DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  # DOTNET_CLI_TELEMETRY_OPTOUT: true       # Disable sending .NET CLI telemetry
  # DOTNET_VERSION: '8.0.x'                 # Version .NET
  DOTNET_INSTALL_DIR: '.\.dotnet'
  # DOTNET_DEPENDENCIES_DIR: '~/.nuget/packages'

  
concurrency:
  group: CI-Server-ðŸ§ª
  cancel-in-progress: true
jobs:
  CI:
    continue-on-error: false
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
      fail-fast: false
      max-parallel: 1
    runs-on: ${{ matrix.os }}
    
    steps:
        - uses: actions/checkout@v4.1.1
        - name: Cache .NET ðŸ“¦
          id: cache-dotnet
          uses: actions/cache@v4.0.1
          with:
            path: ${{ env.DOTNET_INSTALL_DIR }}
            key: Dotnet-8
            restore-keys: Dotnet-8
        
        - name: Display Cache .NET ðŸ“¦
          run: echo '${{ toJSON(steps.cache-dotnet.outputs) }}'
        - name: Setup .NET ðŸ“¦
          if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
          uses: actions/setup-dotnet@v4.0.0
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}
            
        - name: Install Dependencies ðŸ“‚
          run: dotnet restore
        
        - name: Build ðŸ§±
          run: dotnet build -c release --no-restore

#         dotnet-version: ${{ env.DOTNET_VERSION }}

